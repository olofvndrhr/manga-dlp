[build-system]
requires = ["hatchling>=1.11.0"]
build-backend = "hatchling.build"

[project]
dynamic = ["version"]
name = "manga-dlp"
description = "A cli manga downloader"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "Ivan Schaller", email = "ivan@schaller.sh" },
]
keywords = [
    "manga",
    "downloader",
    "mangadex",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "requests>=2.28.0",
    "loguru>=0.6.0",
    "click>=8.1.3",
    "click-option-group>=0.5.5",
    "xmltodict>=0.13.0"
]

[project.urls]
Homepage = "https://github.com/olofvndrhr/manga-dlp"
History = "https://github.com/olofvndrhr/manga-dlp/commits/master"
Tracker = "https://github.com/olofvndrhr/manga-dlp/issues"
Source = "https://github.com/olofvndrhr/manga-dlp"

[project.scripts]
mangadlp = "mangadlp.cli:main"
manga-dlp = "mangadlp.cli:main"

[tool.hatch.version]
path = "mangadlp/__about__.py"

[tool.hatch.build]
ignore-vcs = true

[tool.hatch.build.targets.sdist]
packages = ["mangadlp"]

[tool.hatch.build.targets.wheel]
packages = ["mangadlp"]

[tool.hatch.envs.default]
dependencies = [
    "requests>=2.28.0",
    "loguru>=0.6.0",
    "click>=8.1.3",
    "click-option-group>=0.5.5",
    "xmltodict>=0.13.0",
    "xmlschema>=2.2.1",
    "img2pdf>=0.4.4",
    "hatch>=1.6.0",
    "hatchling>=1.11.0",
    "pytest>=7.0.0",
    "coverage>=6.3.1",
    "black>=22.1.0",
    "isort>=5.10.0",
    "pylint>=2.13.0",
    "mypy>=0.940",
    "tox>=3.24.5",
    "autoflake>=1.4",
    "pylama>=8.3.8",
]

[tool.isort]
py_version = 39
skip_gitignore = true
line_length = 88
profile = "black"
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true

[tool.mypy]
python_version = "3.9"
disallow_untyped_defs = false
follow_imports = "normal"
ignore_missing_imports = true
warn_no_return = false
warn_unused_ignores = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
no_implicit_optional = false

[tool.pytest.ini_options]
pythonpath = [
    "."
]

[tool.coverage.run]
source = ["mangadlp"]
branch = true
command_line = "-m pytest --exitfirst"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run:
    "@(abc.)?abstractmethod",
]
ignore_errors = true

[tool.pylint.main]
py-version = "3.9"

[tool.pylint.logging]
logging-modules = ["logging", "loguru"]
disable = "C0301, C0114, C0116, W0703, R0902, R0913, E0401, W1203"
good-names = "r"
logging-format-style = "new"
